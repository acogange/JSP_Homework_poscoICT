/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-27 01:30:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import MovieDatas.MovieChart;
import dto.MovieVo;
import java.util.List;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.MovieVo");
    _jspx_imports_classes.add("MovieDatas.MovieChart");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   List<MovieVo> list = MovieChart.getCGVdata();
   for(MovieVo v : list){
      System.out.println(v.toString());
      
   }
   
   // list -> json
   String jsonData = "[";
   
   
   for(MovieVo v:list){
	   jsonData+="{name:'"+v.getTitle()+"',y:"+v.getPercent()+"}, ";
	   
   }
	jsonData=jsonData.substring(0,jsonData.lastIndexOf(","));//맨마지막 ,전까지
	
	jsonData+="]";
   
   System.out.println(jsonData);
   
   
   request.setAttribute("jsonData",jsonData);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".highcharts-figure,\r\n");
      out.write(".highcharts-data-table table {\r\n");
      out.write("  min-width: 320px;\r\n");
      out.write("  max-width: 800px;\r\n");
      out.write("  margin: 1em auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table table {\r\n");
      out.write("  font-family: Verdana, sans-serif;\r\n");
      out.write("  border-collapse: collapse;\r\n");
      out.write("  border: 1px solid #ebebeb;\r\n");
      out.write("  margin: 10px auto;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  max-width: 500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table caption {\r\n");
      out.write("  padding: 1em 0;\r\n");
      out.write("  font-size: 1.2em;\r\n");
      out.write("  color: #555;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table th {\r\n");
      out.write("  font-weight: 600;\r\n");
      out.write("  padding: 0.5em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table td,\r\n");
      out.write(".highcharts-data-table th,\r\n");
      out.write(".highcharts-data-table caption {\r\n");
      out.write("  padding: 0.5em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table thead tr,\r\n");
      out.write(".highcharts-data-table tr:nth-child(even) {\r\n");
      out.write("  background: #f8f8f8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table tr:hover {\r\n");
      out.write("  background: #f1f7ff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"number\"] {\r\n");
      out.write("  min-width: 50px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<figure class=\"highcharts-figure\">\r\n");
      out.write("  <div id=\"container\"></div>\r\n");
      out.write("  <p class=\"highcharts-description\">\r\n");
      out.write("    Pie charts are very popular for showing a compact overview of a\r\n");
      out.write("    composition or comparison. While they can be harder to read than\r\n");
      out.write("    column charts, they remain a popular choice for small datasets.\r\n");
      out.write("  </p>\r\n");
      out.write("</figure>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("Highcharts.chart('container', {\r\n");
      out.write("     chart: {\r\n");
      out.write("       plotBackgroundColor: null,\r\n");
      out.write("       plotBorderWidth: null,\r\n");
      out.write("       plotShadow: false,\r\n");
      out.write("       type: 'pie'\r\n");
      out.write("     },\r\n");
      out.write("     title: {\r\n");
      out.write("       text: 'Browser market shares in January, 2018'\r\n");
      out.write("     },\r\n");
      out.write("     tooltip: {\r\n");
      out.write("       text: '2022.05.27 Movie Chart'\r\n");
      out.write("     },\r\n");
      out.write("     accessibility: {\r\n");
      out.write("       point: {\r\n");
      out.write("         valueSuffix: '%'\r\n");
      out.write("       }\r\n");
      out.write("     },\r\n");
      out.write("     plotOptions: {\r\n");
      out.write("       pie: {\r\n");
      out.write("         allowPointSelect: true,\r\n");
      out.write("         cursor: 'pointer',\r\n");
      out.write("         dataLabels: {\r\n");
      out.write("           enabled: true,\r\n");
      out.write("           format: '<b>{point.name}</b>: {point.percentage:.1f} %'\r\n");
      out.write("         }\r\n");
      out.write("       }\r\n");
      out.write("     },\r\n");
      out.write("     series: [{\r\n");
      out.write("       name: 'Brands',\r\n");
      out.write("       colorByPoint: true,\r\n");
      out.write("       data: ");
      out.print(request.getAttribute("jsonData"));
      out.write("\r\n");
      out.write("     }]\r\n");
      out.write("   });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
